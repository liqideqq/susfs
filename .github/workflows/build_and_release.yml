name: Build and Release Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-release:
    name: Build and Release Kernel
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Git
      run: |
        git config --global user.name "liqideqq"
        git config --global user.email "atimor@126.com"

    - name: Set up Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bc bison build-essential ccache curl flex git gnupg gperf imagemagick \
          lib32ncurses5-dev lib32readline-dev liblz4-tool libncurses5 libncurses5-dev \
          libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool \
          squashfs-tools xsltproc zip zlib1g-dev g++-multilib gcc-multilib lib32z1-dev

    - name: Install repo tool
      run: |
        mkdir -p ~/.bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
        chmod a+rx ~/.bin/repo
        echo 'export PATH=$PATH:~/.bin' >> $GITHUB_ENV

    - name: Clone Kernel Repositories and Run Build Script
      run: |
        # Ensure the script has execution permissions
        chmod +x ./AIO_GKI_build_kernel_release.sh

        # Execute the script
        ./AIO_GKI_build_kernel_release.sh

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ github.run_number }}"
        release_name: "GKI Kernels With KernelSU & SUSFS"
        body: |
          Automated release by GitHub Actions.
          Includes the following builds:
          $(find ./builds -type f -name "*.zip" -exec basename {} \;)
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./builds
        asset_name: build-artifacts.zip
        asset_content_type: application/zip
